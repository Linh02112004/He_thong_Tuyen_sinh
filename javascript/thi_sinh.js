
let wishCount = 3; // ƒê·∫øm s·ªë nguy·ªán v·ªçng hi·ªán t·∫°i

function deleteWish(wishId) {
const wishElement = document.getElementById(wishId);
if (wishElement) {
	wishElement.remove();
	updateWishes();
}
}

function updateWishes() {
const sections = document.querySelectorAll('.section');
sections.forEach((section, index) => {
	const header = section.querySelector('.section-header span:first-child');
	header.textContent = `Nguy·ªán v·ªçng ${index + 1}`;
	section.id = `wish-${index + 1}`;
	const selectMajor = section.querySelector('select[id^="major"]');
	selectMajor.id = `major${index + 1}`;
	const selectBlock = section.querySelector('select[id^="block"]');
	selectBlock.id = `block${index + 1}`;
});
wishCount = sections.length; // C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng nguy·ªán v·ªçng
document.getElementById('message').textContent = ""; // X√≥a th√¥ng b√°o
}

function addWish() {
if (wishCount >= 3) {
	document.getElementById('message').textContent = "Ch·ªâ ƒë∆∞·ª£c t·ªëi ƒëa 3 nguy·ªán v·ªçng!";
	return;
}
wishCount++;
const newWish = document.createElement('div');
newWish.classList.add('section');
newWish.id = `wish-${wishCount}`;
newWish.innerHTML = `
	<div class="section-header">
		<span>Nguy·ªán v·ªçng ${wishCount}</span>
		<span class="delete-button" onclick="deleteWish('wish-${wishCount}')">üóëÔ∏è</span>
	</div>
	<div class="input-group">
		<label for="major${wishCount}">Ng√†nh/Ch∆∞∆°ng tr√¨nh ƒëƒÉng k√Ω x√©t tuy·ªÉn</label>
		<div class="select-group">
			<select id="major${wishCount}">
				<option value="C√¥ng Ngh·ªá Sinh H·ªçc">C√¥ng Ngh·ªá Sinh H·ªçc</option>
				<option value="K·ªπ Thu·∫≠t H√≥a H·ªçc">K·ªπ Thu·∫≠t H√≥a H·ªçc</option>
				<option value="K·ªπ Thu·∫≠t ƒêi·ªÅu Khi·ªÉn v√† T·ª± ƒê·ªông H√≥a">K·ªπ Thu·∫≠t ƒêi·ªÅu Khi·ªÉn v√† T·ª± ƒê·ªông H√≥a</option>
				<option value="K·ªπ Thu·∫≠t Y Sinh (H·ªá T∆∞ Sinh)">K·ªπ Thu·∫≠t Y Sinh (H·ªá T∆∞ Sinh)</option>
				<option value="K·ªπ Thu·∫≠t ƒêi·ªán T·ª≠ - Vi·ªÖn Th√¥ng (H·ªá Th·ªëng Th√¥ng Minh V√† IoT)">K·ªπ Thu·∫≠t ƒêi·ªán T·ª≠ - Vi·ªÖn Th√¥ng (H·ªá Th·ªëng Th√¥ng Minh V√† IoT)</option>
				<option value="K·ªπ Thu·∫≠t ƒêi·ªán T·ª≠ - Vi·ªÖn Th√¥ng (Thi·∫øt K·∫ø Vi M·∫°ch B·∫£n D·∫´n)">K·ªπ Thu·∫≠t ƒêi·ªán T·ª≠ - Vi·ªÖn Th√¥ng (Thi·∫øt K·∫ø Vi M·∫°ch B·∫£n D·∫´n)</option>
				<option value="K·ªπ Thu·∫≠t Robot V√† Tr√≠ Tu·ªá Nh√¢n T·∫°o (M·ªôt S·ªë H·ªçc Ph·∫ßn Chuy√™n Ng√†nh H·ªçc B·∫±ng Ti·∫øng Anh)">K·ªπ Thu·∫≠t Robot V√† Tr√≠ Tu·ªá Nh√¢n T·∫°o (M·ªôt S·ªë H·ªçc Ph·∫ßn Chuy√™n Ng√†nh H·ªçc B·∫±ng Ti·∫øng Anh)</option>
				<option value="C√¥ng Ngh·ªá Th√¥ng Tin">C√¥ng Ngh·ªá Th√¥ng Tin</option>
				<option value="K·ªπ Thu·∫≠t Ph·∫ßn M·ªÅm (M·ªôt S·ªë H·ªçc Ph·∫ßn Chuy√™n Ng√†nh H·ªçc B·∫±ng Ti·∫øng Anh)">K·ªπ Thu·∫≠t Ph·∫ßn M·ªÅm (M·ªôt S·ªë H·ªçc Ph·∫ßn Chuy√™n Ng√†nh H·ªçc B·∫±ng Ti·∫øng Anh)</option>
				<option value="C√¥ng Ngh·ªá Th√¥ng Tin Vi·ªát Nh·∫≠t">C√¥ng Ngh·ªá Th√¥ng Tin Vi·ªát Nh·∫≠t</option>
				<option value="Khoa H·ªçc M√°y T√≠nh">Khoa H·ªçc M√°y T√≠nh</option>
				<option value="T√†i NƒÉng Khoa H·ªçc M√°y T√≠nh">T√†i NƒÉng Khoa H·ªçc M√°y T√≠nh</option>
				<option value="An To√†n Th√¥ng Tin (M·ªôt S·ªë H·ªçc Ph·∫ßn Chuy√™n Ng√†nh H·ªçc B·∫±ng Ti·∫øng Anh)">An To√†n Th√¥ng Tin (M·ªôt S·ªë H·ªçc Ph·∫ßn Chuy√™n Ng√†nh H·ªçc B·∫±ng Ti·∫øng Anh)</option>
				<option value="Tr√≠ Tu·ªá Nh√¢n T·∫°o">Tr√≠ Tu·ªá Nh√¢n T·∫°o</option>
				<option value="K·ªπ Thu·∫≠t C∆° ƒêi·ªán T·ª≠">K·ªπ Thu·∫≠t C∆° ƒêi·ªán T·ª≠</option>
				<option value="K·ªπ Thu·∫≠t C∆° Kh√≠">K·ªπ Thu·∫≠t C∆° Kh√≠</option>
				<option value="V·∫≠t Li·ªáu Ti√™n Ti·∫øn V√† C√¥ng Ngh·ªá Nano">V·∫≠t Li·ªáu Ti√™n Ti·∫øn V√† C√¥ng Ngh·ªá Nano</option>
				<option value="V·∫≠t Li·ªáu Th√¥ng Minh V√† Tr√≠ Tu·ªá Nh√¢n T·∫°o">V·∫≠t Li·ªáu Th√¥ng Minh V√† Tr√≠ Tu·ªá Nh√¢n T·∫°o</option>
				<option value="Chip B√°n D·∫´n V√† C√¥ng Ngh·ªá ƒê√≥ng G√≥i">Chip B√°n D·∫´n V√† C√¥ng Ngh·ªá ƒê√≥ng G√≥i</option>
				<option value="K·ªπ Thu·∫≠t √î T√¥">K·ªπ Thu·∫≠t √î T√¥</option>
				<option value="C∆° ƒêi·ªán T·ª≠ √î T√¥">C∆° ƒêi·ªán T·ª≠ √î T√¥</option>
				<option value="K·ªπ Thu·∫≠t Ph·∫ßn M·ªÅm √î T√¥">K·ªπ Thu·∫≠t Ph·∫ßn M·ªÅm √î T√¥</option>
				<option value="Qu·∫£n Tr·ªã Kinh Doanh">Qu·∫£n Tr·ªã Kinh Doanh</option>
				<option value="K·∫ø To√°n">K·∫ø To√°n</option>
				<option value="T√†i Ch√≠nh - Ng√¢n H√†ng">T√†i Ch√≠nh - Ng√¢n H√†ng</option>
				<option value="Qu·∫£n Tr·ªã Nh√¢n L·ª±c">Qu·∫£n Tr·ªã Nh√¢n L·ª±c</option>
				<option value="Lu·∫≠t Kinh T·∫ø">Lu·∫≠t Kinh T·∫ø</option>
				<option value="Kinh Doanh Qu·ªëc T·∫ø (M·ªôt S·ªë H·ªçc Ph·∫ßn Chuy√™n Ng√†nh H·ªçc B·∫±ng Ti·∫øng Anh)">Kinh Doanh Qu·ªëc T·∫ø (M·ªôt S·ªë H·ªçc Ph·∫ßn Chuy√™n Ng√†nh H·ªçc B·∫±ng Ti·∫øng Anh)</option>
				<option value="Logistics v√† Qu·∫£n L√Ω Chu·ªói Cung ·ª®ng (M·ªôt S·ªë H·ªçc Ph·∫ßn Chuy√™n Ng√†nh H·ªçc B·∫±ng Ti·∫øng Anh)">Logistics v√† Qu·∫£n L√Ω Chu·ªói Cung ·ª®ng (M·ªôt S·ªë H·ªçc Ph·∫ßn Chuy√™n Ng√†nh H·ªçc B·∫±ng Ti·∫øng Anh)</option>
				<option value="Marketing">Marketing</option>
				<option value="C√¥ng Ngh·ªá T√†i Ch√≠nh">C√¥ng Ngh·ªá T√†i Ch√≠nh</option>
				<option value="Kinh T·∫ø S·ªë">Kinh T·∫ø S·ªë</option>
				<option value="Kinh Doanh S·ªë">Kinh Doanh S·ªë</option>
				<option value="Th∆∞∆°ng M·∫°i ƒêi·ªán T·ª≠">Th∆∞∆°ng M·∫°i ƒêi·ªán T·ª≠</option>
				<option value="Logistics S·ªë">Logistics S·ªë</option>
				<option value="C√¥ng Ngh·ªá Marketing">C√¥ng Ngh·ªá Marketing</option>
				<option value="Ng√¥n Ng·ªØ Anh">Ng√¥n Ng·ªØ Anh</option>
				<option value="Ng√¥n Ng·ªØ Trung Qu·ªëc">Ng√¥n Ng·ªØ Trung Qu·ªëc</option>
				<option value="Ng√¥n Ng·ªØ H√†n Qu·ªëc">Ng√¥n Ng·ªØ H√†n Qu·ªëc</option>
				<option value="Ng√¥n Ng·ªØ Nh·∫≠t">Ng√¥n Ng·ªØ Nh·∫≠t</option>
				<option value="Ng√¥n Ng·ªØ Ph√°p">Ng√¥n Ng·ªØ Ph√°p</option>
				<option value="ƒê√¥ng Ph∆∞∆°ng H·ªçc">ƒê√¥ng Ph∆∞∆°ng H·ªçc</option>
				<option value="Du L·ªãch (ƒê·ªãnh H∆∞·ªõng Qu·∫£n Tr·ªã Du L·ªãch)">Du L·ªãch (ƒê·ªãnh H∆∞·ªõng Qu·∫£n Tr·ªã Du L·ªãch)</option>
				<option value="Kinh Doanh Du L·ªãch S·ªë">Kinh Doanh Du L·ªãch S·ªë</option>
				<option value="H∆∞·ªõng D·∫´n Du L·ªãch Qu·ªëc T·∫ø">H∆∞·ªõng D·∫´n Du L·ªãch Qu·ªëc T·∫ø</option>
				<option value="Qu·∫£n Tr·ªã Kh√°ch S·∫°n">Qu·∫£n Tr·ªã Kh√°ch S·∫°n</option>
				<option value="ƒêi·ªÅu D∆∞·ª°ng">ƒêi·ªÅu D∆∞·ª°ng</option>
				<option value="D∆∞·ª£c H·ªçc">D∆∞·ª£c H·ªçc</option>
				<option value="K·ªπ Thu·∫≠t Ph·ª•c H·ªìi Ch·ª©c NƒÉng">K·ªπ Thu·∫≠t Ph·ª•c H·ªìi Ch·ª©c NƒÉng</option>
				<option value="K·ªπ Thu·∫≠t X√©t Nghi·ªám Y H·ªçc">K·ªπ Thu·∫≠t X√©t Nghi·ªám Y H·ªçc</option>
				<option value="K·ªπ Thu·∫≠t H√¨nh ·∫¢nh Y H·ªçc">K·ªπ Thu·∫≠t H√¨nh ·∫¢nh Y H·ªçc</option>
				<option value="Y Khoa">Y Khoa</option>
				<option value="RƒÉng H√†m M·∫∑t">RƒÉng H√†m M·∫∑t</option>
				<option value="Qu·∫£n L√Ω B·ªánh Vi·ªán">Qu·∫£n L√Ω B·ªánh Vi·ªán</option>
				<option value="Y H·ªçc C·ªï Truy·ªÅn">Y H·ªçc C·ªï Truy·ªÅn</option>
			</select>
			<select id="block${wishCount}">
				<option value="">Ch·ªçn t·ªï h·ª£p x√©t tuy·ªÉn</option>
			</select>
		</div>
	</div>
`;
document.getElementById('wish-container').appendChild(newWish);
    document.getElementById('message').textContent = ""; // X√≥a th√¥ng b√°o
    // C·∫≠p nh·∫≠t kh·ªëi ng√†nh cho nguy·ªán v·ªçng m·ªõi
    const selectMajor = newWish.querySelector(`select[id="major${wishCount}"]`);
    const selectBlock = newWish.querySelector(`select[id="block${wishCount}"]`);
    updateBlocks(selectMajor, selectBlock);
}
const blocks = {
	'C√¥ng Ngh·ªá Sinh H·ªçc': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'B00 (To√°n, H√≥a h·ªçc, Sinh h·ªçc)', 'B08 (To√°n, Sinh h·ªçc, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'K·ªπ Thu·∫≠t H√≥a H·ªçc': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'B00 (To√°n, H√≥a h·ªçc, Sinh h·ªçc)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'K·ªπ Thu·∫≠t ƒêi·ªÅu Khi·ªÉn v√† T·ª± ƒê·ªông H√≥a': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'C01 (Ng·ªØ vƒÉn, To√°n, V·∫≠t l√Ω)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'K·ªπ Thu·∫≠t Y Sinh (H·ªá T∆∞ Sinh)': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'B00 (To√°n, H√≥a h·ªçc, Sinh h·ªçc)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'K·ªπ Thu·∫≠t ƒêi·ªán T·ª≠ - Vi·ªÖn Th√¥ng (H·ªá Th·ªëng Th√¥ng Minh V√† IoT)': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'C01 (Ng·ªØ vƒÉn, To√°n, V·∫≠t l√Ω)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'K·ªπ Thu·∫≠t ƒêi·ªán T·ª≠ - Vi·ªÖn Th√¥ng (Thi·∫øt K·∫ø Vi M·∫°ch B·∫£n D·∫´n)': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'C01 (Ng·ªØ vƒÉn, To√°n, V·∫≠t l√Ω)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'K·ªπ Thu·∫≠t Robot V√† Tr√≠ Tu·ªá Nh√¢n T·∫°o (M·ªôt S·ªë H·ªçc Ph·∫ßn Chuy√™n Ng√†nh H·ªçc B·∫±ng Ti·∫øng Anh)': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'C01 (Ng·ªØ vƒÉn, To√°n, V·∫≠t l√Ω)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'C√¥ng Ngh·ªá Th√¥ng Tin': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'K·ªπ Thu·∫≠t Ph·∫ßn M·ªÅm (M·ªôt S·ªë H·ªçc Ph·∫ßn Chuy√™n Ng√†nh H·ªçc B·∫±ng Ti·∫øng Anh)': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'C√¥ng Ngh·ªá Th√¥ng Tin Vi·ªát Nh·∫≠t': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)', 'D28 (To√°n, V·∫≠t l√Ω, Ti·∫øng Nh·∫≠t)'],
	'Khoa H·ªçc M√°y T√≠nh': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'T√†i NƒÉng Khoa H·ªçc M√°y T√≠nh': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'An To√†n Th√¥ng Tin (M·ªôt S·ªë H·ªçc Ph·∫ßn Chuy√™n Ng√†nh H·ªçc B·∫±ng Ti·∫øng Anh)': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'Tr√≠ Tu·ªá Nh√¢n T·∫°o': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'K·ªπ Thu·∫≠t C∆° ƒêi·ªán T·ª≠': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'A02 (To√°n, V·∫≠t l√Ω, Sinh h·ªçc)', 'C01 (Ng·ªØ vƒÉn, To√°n, V·∫≠t l√Ω)'],
	'K·ªπ Thu·∫≠t C∆° Kh√≠': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'A02 (To√°n, V·∫≠t l√Ω, Sinh h·ªçc)', 'C01 (Ng·ªØ vƒÉn, To√°n, V·∫≠t l√Ω)'],
	'V·∫≠t Li·ªáu Ti√™n Ti·∫øn V√† C√¥ng Ngh·ªá Nano': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'B00 (To√°n, H√≥a h·ªçc, Sinh h·ªçc)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'V·∫≠t Li·ªáu Th√¥ng Minh V√† Tr√≠ Tu·ªá Nh√¢n T·∫°o': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'C01 (Ng·ªØ vƒÉn, To√°n, V·∫≠t l√Ω)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'Chip B√°n D·∫´n V√† C√¥ng Ngh·ªá ƒê√≥ng G√≥i': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'B00 (To√°n, H√≥a h·ªçc, Sinh h·ªçc)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'K·ªπ Thu·∫≠t √î T√¥': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'A10 (To√°n, V·∫≠t l√Ω, Gi√°o d·ª•c c√¥ng d√¢n)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)'],
	'C∆° ƒêi·ªán T·ª≠ √î T√¥': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'A10 (To√°n, V·∫≠t l√Ω, Gi√°o d·ª•c c√¥ng d√¢n)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)'],
	'K·ªπ Thu·∫≠t Ph·∫ßn M·ªÅm √î T√¥': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'A10 (To√°n, V·∫≠t l√Ω, Gi√°o d·ª•c c√¥ng d√¢n)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)'],

	'Qu·∫£n Tr·ªã Kinh Doanh': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'K·∫ø To√°n': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'T√†i Ch√≠nh - Ng√¢n H√†ng': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'Qu·∫£n Tr·ªã Nh√¢n L·ª±c': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'Lu·∫≠t Kinh T·∫ø': ['C00 (Ng·ªØ vƒÉn, L·ªãch s·ª≠, ƒê·ªãa l√Ω)', 'C04 (Ng·ªØ vƒÉn, To√°n, ƒê·ªãa l√Ω)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D14 (Ng·ªØ vƒÉn, L·ªãch s·ª≠, Ti·∫øng Anh)'],
	'Kinh Doanh Qu·ªëc T·∫ø (M·ªôt S·ªë H·ªçc Ph·∫ßn Chuy√™n Ng√†nh H·ªçc B·∫±ng Ti·∫øng Anh)': ['A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)', 'D10 (To√°n, ƒê·ªãa l√Ω, Ti·∫øng Anh)'],
	'Logistics v√† Qu·∫£n L√Ω Chu·ªói Cung ·ª®ng (M·ªôt S·ªë H·ªçc Ph·∫ßn Chuy√™n Ng√†nh H·ªçc B·∫±ng Ti·∫øng Anh)': ['A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)', 'D10 (To√°n, ƒê·ªãa l√Ω, Ti·∫øng Anh)'],
	'Marketing': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D10 (To√°n, ƒê·ªãa l√Ω, Ti·∫øng Anh)'],
	'C√¥ng Ngh·ªá T√†i Ch√≠nh': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'Kinh T·∫ø S·ªë': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'Kinh Doanh S·ªë': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'Th∆∞∆°ng M·∫°i ƒêi·ªán T·ª≠': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'Logistics S·ªë': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'C√¥ng Ngh·ªá Marketing': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],

	'Ng√¥n Ng·ªØ Anh': ['A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D09 (To√°n, L·ªãch s·ª≠, Ti·∫øng Anh)', 'D15 (Ng·ªØ vƒÉn, ƒê·ªãa l√Ω, Ti·∫øng Anh)'],
	'Ng√¥n Ng·ªØ Trung Qu·ªëc': ['A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D04 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Trung)', 'D09 (To√°n, L·ªãch s·ª≠, Ti·∫øng Anh)'],
	'Ng√¥n Ng·ªØ H√†n Qu·ªëc': ['A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D09 (To√°n, L·ªãch s·ª≠, Ti·∫øng Anh)', 'D02 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng H√†n)'],
	'Ng√¥n Ng·ªØ Nh·∫≠t': ['A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D06 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Nh·∫≠t)', 'D28 (To√°n, V·∫≠t l√Ω, Ti·∫øng Nh·∫≠t)'],
	'Ng√¥n Ng·ªØ Ph√°p': ['A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D44 (Ng·ªØ vƒÉn, ƒê·ªãa l√Ω, Ti·∫øng Ph√°p)', 'D64 (Ng·ªØ vƒÉn, L·ªãch s·ª≠, Ti·∫øng Anh)'],
	'ƒê√¥ng Ph∆∞∆°ng H·ªçc': ['A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'C00 (Ng·ªØ vƒÉn, L·ªãch s·ª≠, ƒê·ªãa l√Ω)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D09 (To√°n, L·ªãch s·ª≠, Ti·∫øng Anh)'],
	'Du L·ªãch (ƒê·ªãnh H∆∞·ªõng Qu·∫£n Tr·ªã Du L·ªãch)': ['A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'C00 (Ng·ªØ vƒÉn, L·ªãch s·ª≠, ƒê·ªãa l√Ω)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D15 (Ng·ªØ vƒÉn, ƒê·ªãa l√Ω, Ti·∫øng Anh)'],
	'Kinh Doanh Du L·ªãch S·ªë': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D10 (To√°n, ƒê·ªãa l√Ω, Ti·∫øng Anh)'],
	'H∆∞·ªõng D·∫´n Du L·ªãch Qu·ªëc T·∫ø': ['A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'C00 (Ng·ªØ vƒÉn, L·ªãch s·ª≠, ƒê·ªãa l√Ω)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D15 (Ng·ªØ vƒÉn, ƒê·ªãa l√Ω, Ti·∫øng Anh)'],
	'Qu·∫£n Tr·ªã Kh√°ch S·∫°n': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D10 (To√°n, ƒê·ªãa l√Ω, Ti·∫øng Anh)'],

	'ƒêi·ªÅu D∆∞·ª°ng': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'B00 (To√°n, H√≥a h·ªçc, Sinh h·ªçc)', 'B08 (To√°n, Sinh h·ªçc, Ti·∫øng Anh)'],
	'D∆∞·ª£c H·ªçc': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'B00 (To√°n, H√≥a h·ªçc, Sinh h·ªçc)', 'B08 (To√°n, Sinh h·ªçc, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'K·ªπ Thu·∫≠t Ph·ª•c H·ªìi Ch·ª©c NƒÉng': ['A02 (To√°n, V·∫≠t l√Ω, Sinh h·ªçc)', 'B00 (To√°n, H√≥a h·ªçc, Sinh h·ªçc)', 'B08 (To√°n, Sinh h·ªçc, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'K·ªπ Thu·∫≠t X√©t Nghi·ªám Y H·ªçc': ['A02 (To√°n, V·∫≠t l√Ω, Sinh h·ªçc)', 'B00 (To√°n, H√≥a h·ªçc, Sinh h·ªçc)', 'B08 (To√°n, Sinh h·ªçc, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'K·ªπ Thu·∫≠t H√¨nh ·∫¢nh Y H·ªçc': ['A02 (To√°n, V·∫≠t l√Ω, Sinh h·ªçc)', 'B00 (To√°n, H√≥a h·ªçc, Sinh h·ªçc)', 'B08 (To√°n, Sinh h·ªçc, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'Y Khoa': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)','B00 (To√°n, H√≥a h·ªçc, Sinh h·ªçc)', 'B08 (To√°n, Sinh h·ªçc, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'RƒÉng H√†m M·∫∑t': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)','B00 (To√°n, H√≥a h·ªçc, Sinh h·ªçc)', 'B08 (To√°n, Sinh h·ªçc, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'Qu·∫£n L√Ω B·ªánh Vi·ªán': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'B00 (To√°n, H√≥a h·ªçc, Sinh h·ªçc)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)'],
	'Y H·ªçc C·ªï Truy·ªÅn': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)','B00 (To√°n, H√≥a h·ªçc, Sinh h·ªçc)', 'B08 (To√°n, Sinh h·ªçc, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
}
function updateBlocks(selectMajor, selectBlock) {
    selectMajor.addEventListener('change', function () {
        const selectedMajor = this.value;
        selectBlock.innerHTML = '<option value="">Ch·ªçn t·ªï h·ª£p x√©t tuy·ªÉn</option>';
        
        if (blocks[selectedMajor]) {
            blocks[selectedMajor].forEach(block => {
                const option = document.createElement('option');
                option.value = block;
                option.textContent = block;
                selectBlock.appendChild(option);
            });
        }
    });
}

// Thi·∫øt l·∫≠p cho c√°c nguy·ªán v·ªçng hi·ªán t·∫°i
document.querySelectorAll('.section').forEach((section) => {
    const selectMajor = section.querySelector('select[id^="major"]');
    const selectBlock = section.querySelector('select[id^="block"]');
    updateBlocks(selectMajor, selectBlock);
});
const districts = {
            'An Giang': ['An Ph√∫', 'Ch√¢u ƒê·ªëc', 'Ch√¢u Ph√∫', 'Ch√¢u Th√†nh', 'Ch·ª£ M·ªõi', 'Long Xuy√™n', 'Ph√∫ T√¢n', 'T√¢n Ch√¢u', 'Tho·∫°i S∆°n', 'T·ªãnh Bi√™n', 'Tri T√¥n'],
    	    'B√† R·ªãa - V≈©ng T√†u': ['V≈©ng T√†u', 'B√† R·ªãa', 'Long ƒêi·ªÅn', 'ƒê·∫•t ƒê·ªè', 'Xuy√™n M·ªôc'],
            'B·∫°c Li√™u': ['B·∫°c Li√™u', 'Gi√° Rai', 'H√≤a B√¨nh', 'H·ªìng D√¢n', 'Ph∆∞·ªõc Long'],
    	    'B·∫Øc Giang': ['B·∫Øc Giang', 'Hi·ªáp H√≤a', 'L·∫°ng Giang', 'L·ª•c Nam', 'L·ª•c Ng·∫°n', 'S∆°n ƒê·ªông', 'T√¢n Y√™n', 'Y√™n D≈©ng', 'Y√™n Th·∫ø', 'Vi·ªát Y√™n'],
            'B·∫Øc K·∫°n': ['B·∫Øc K·∫°n', 'Ba B·ªÉ', 'B·∫°ch Th√¥ng', 'Ch·ª£ ƒê·ªìn', 'Ch·ª£ M·ªõi'],
    	    'B·∫øn Tre': ['B·∫øn Tre', 'Ch√¢u Th√†nh', 'B√¨nh ƒê·∫°i', 'Gi·ªìng Tr√¥m', 'M·ªè C√†y B·∫Øc'],
   	    	'B√¨nh ƒê·ªãnh': ['Quy Nh∆°n', 'An Nh∆°n', 'B√¨nh ƒê·ªãnh', 'Ho√†i Nh∆°n', 'Ph√π C√°t'],
    	    'B√¨nh D∆∞∆°ng': ['Th·ªß D·∫ßu M·ªôt', 'Dƒ© An', 'Thu·∫≠n An', 'B·∫øn C√°t', 'T√¢n Uy√™n'],
            'B√¨nh Ph∆∞·ªõc': ['ƒê·ªìng Xo√†i', 'Ph∆∞·ªõc Long', 'B√π Gia M·∫≠p', 'B√π ƒê·ªëp', 'Ch∆°n Th√†nh'],
  	    	'B√¨nh Thu·∫≠n': ['Phan Thi·∫øt', 'La Gi', 'Tuy Phong', 'B·∫Øc B√¨nh', 'H√†m Thu·∫≠n B·∫Øc'],
 	   		'Cao B·∫±ng': ['Cao B·∫±ng', 'B·∫£o L·∫°c', 'B·∫£o L√¢m', 'Th·∫°ch An', 'Qu·∫£ng H√≤a'],
  	   		'ƒê√† N·∫µng': ['H·∫£i Ch√¢u', 'Thanh Kh√™', 'Li√™n Chi·ªÉu', 'Ng≈© H√†nh S∆°n', 'S∆°n Tr√†'],
 	   		'ƒê·∫Øk L·∫Øk': ['Bu√¥n Ma Thu·ªôt', 'Bu√¥n H·ªì', 'Ea H‚Äôleo', 'Kr√¥ng Ana', 'L·∫Øk'],
 	   		'ƒê·∫Øk N√¥ng': ['Gia Nghƒ©a', 'ƒê·∫Øk Mil', 'ƒê·∫Øk Song', 'Kr√¥ng N√¥', 'Tuy ƒê·ª©c'],
 	   		'ƒêi·ªán Bi√™n': ['ƒêi·ªán Bi√™n Ph·ªß', 'M∆∞·ªùng Lay', 'ƒêi·ªán Bi√™n ƒê√¥ng', 'M∆∞·ªùng Nh√©', 'T·ªßa Ch√πa'],
  	 	 	'ƒê·ªìng Nai': ['Bi√™n H√≤a', 'Long Th√†nh', 'Nh∆°n Tr·∫°ch', 'Vƒ©nh C·ª≠u', 'Xu√¢n L·ªôc'],
   	   		'ƒê·ªìng Th√°p': ['Cao L√£nh', 'Sa ƒê√©c', 'H·ªìng Ng·ª±', 'Thanh B√¨nh', 'Lai Vung'],
          	'Gia Lai': ['Pleiku', 'An Kh√™', 'Ayun Pa', 'Ch∆∞ PƒÉh', 'ƒê·ª©c C∆°'],
 	   		'H√† Giang': ['H√† Giang', 'ƒê·ªìng VƒÉn', 'M√®o V·∫°c', 'Y√™n Minh', 'Qu·∫£n B·∫°'],
 	   		'H√† Nam': ['Ph·ªß L√Ω', 'Duy Ti√™n', 'B√¨nh L·ª•c', 'L√Ω Nh√¢n', 'Kim B·∫£ng'],
 	   		'H√† Tƒ©nh': ['H√† Tƒ©nh', 'H∆∞∆°ng Kh√™', 'K·ª≥ Anh', 'C·∫©m Xuy√™n', 'Th·∫°ch H√†'],
	   		'H·∫£i D∆∞∆°ng': ['H·∫£i D∆∞∆°ng', 'Ch√≠ Linh', 'Kinh M√¥n', 'Nam S√°ch', 'Ninh Giang'],
           	'H·∫£i Ph√≤ng': ['H·∫£i An', 'L√™ Ch√¢n', 'Ng√¥ Quy·ªÅn', 'ƒê·ªì S∆°n', 'Ki·∫øn An'],
  	   		'H√≤a B√¨nh': ['H√≤a B√¨nh', 'Cao Phong', 'ƒê√† B·∫Øc', 'K·ª≥ S∆°n', 'L∆∞∆°ng S∆°n'],
           	'H∆∞ng Y√™n': ['H∆∞ng Y√™n', 'M·ªπ H√†o', 'VƒÉn L√¢m', 'VƒÉn Giang', 'Kho√°i Ch√¢u'],
 	   		'Kh√°nh H√≤a': ['Nha Trang', 'Cam Ranh', 'V·∫°n Ninh', 'Ninh H√≤a', 'Kh√°nh Vƒ©nh'],
 	   		'Ki√™n Giang': ['R·∫°ch Gi√°', 'H√† Ti√™n', 'Ph√∫ Qu·ªëc', 'An Bi√™n', 'Ch√¢u Th√†nh'],
 	   		'Kon Tum': ['Kon Tum', 'ƒêƒÉk Glei', 'Ng·ªçc H·ªìi', 'ƒêƒÉk T√¥', 'Sa Th·∫ßy'],
 	   		'Lai Ch√¢u': ['Lai Ch√¢u', 'M∆∞·ªùng T√®', 'N·∫≠m Nh√πn', 'Tam ƒê∆∞·ªùng', 'Phong Th·ªï'],
 	   		'L·∫°ng S∆°n': ['L·∫°ng S∆°n', 'Th√†nh Ph·ªë L·∫°ng S∆°n', 'Cao L·ªôc', 'VƒÉn L√£ng', 'Tr√†ng ƒê·ªãnh'],
 	   		'L√†o Cai': ['L√†o Cai', 'Th√†nh ph·ªë L√†o Cai', 'Sa Pa', 'B√°t X√°t', 'M∆∞·ªùng Kh∆∞∆°ng'],
 	   		'Long An': ['T√¢n An', 'B·∫øn L·ª©c', 'Ch√¢u Th√†nh', 'ƒê·ª©c H√≤a', 'ƒê·ª©c Hu·ªá'],
  	   		'Nam ƒê·ªãnh': ['Nam ƒê·ªãnh', 'Th√†nh ph·ªë Nam ƒê·ªãnh', 'M·ªπ L·ªôc', 'V·ª• B·∫£n', 'Tr·ª±c Ninh'],
 	   		'Ngh·ªá An': ['Vinh', 'C·ª≠a L√≤', 'Nghƒ©a ƒê√†n', 'ƒê√¥ L∆∞∆°ng', 'Thanh Ch∆∞∆°ng'],
 	   		'Ninh B√¨nh': ['Ninh B√¨nh', 'Tam ƒêi·ªáp', 'Gia Vi·ªÖn', 'Hoa L∆∞', 'Y√™n Kh√°nh'],
 	   		'Ninh Thu·∫≠n': ['Phan Rang - Th√°p Ch√†m', 'Ninh H·∫£i', 'Ninh S∆°n', 'B√°c √Åi', 'Thu·∫≠n B·∫Øc'],
 	   		'Ph√∫ Th·ªç': ['Vi·ªát Tr√¨', 'Ph√∫ Th·ªç', 'ƒêoan H√πng', 'H·∫° H√≤a', 'Thanh Ba'],
 	   		'Qu·∫£ng B√¨nh': ['ƒê·ªìng H·ªõi', 'Ba ƒê·ªìn', 'Qu·∫£ng Tr·∫°ch', 'Tuy√™n H√≥a', 'Minh H√≥a'],
 	   		'Qu·∫£ng Nam': ['Tam K·ª≥', 'H·ªôi An', 'N√∫i Th√†nh', 'Ph√∫ Ninh', 'ThƒÉng B√¨nh'],
 	   		'Qu·∫£ng Ng√£i': ['Qu·∫£ng Ng√£i', 'S∆°n T·ªãnh', 'T∆∞ Nghƒ©a', 'B√¨nh S∆°n', 'Tr√† B·ªìng'],
 	   		'Qu·∫£ng Ninh': ['H·∫° Long', 'U√¥ng B√≠', 'M√≥ng C√°i', 'C·∫©m Ph·∫£', 'ƒê√¥ng Tri·ªÅu'],
 	   		'Qu·∫£ng Tr·ªã': ['ƒê√¥ng H√†', 'Qu·∫£ng Tr·ªã', 'H·∫£i LƒÉng', 'Tri·ªáu Phong', 'Cam L·ªô'],
 	   		'S√≥c TrƒÉng': ['S√≥c TrƒÉng', 'Ng√£ NƒÉm', 'K·∫ø S√°ch', 'M·ªπ T√∫', 'Long Ph√∫'],
 	   		'S∆°n La': ['S∆°n La', 'Th√†nh ph·ªë S∆°n La', 'Mai S∆°n', 'S√¥ng M√£', 'Y√™n Ch√¢u'],
 	   		'T√¢y Ninh': ['T√¢y Ninh', 'Th√†nh ph·ªë T√¢y Ninh', 'H√≤a Th√†nh', 'Tr·∫£ng B√†ng', 'D∆∞∆°ng Minh Ch√¢u'],
 	   		'Th√°i B√¨nh': ['Th√°i B√¨nh', 'Th√†nh ph·ªë Th√°i B√¨nh', 'ƒê√¥ng H∆∞ng', 'H∆∞ng H√†', 'Qu·ª≥nh Ph·ª•'],
 	   		'Th√°i Nguy√™n': ['Th√°i Nguy√™n', 'Th√†nh ph·ªë Th√°i Nguy√™n', 'Ph·ªï Y√™n', 'ƒê·ªìng H·ª∑', 'ƒê·∫°i T·ª´'],
 	   		'Thanh H√≥a': ['Thanh H√≥a', 'Th√†nh ph·ªë Thanh H√≥a', 'S·∫ßm S∆°n', 'B·ªâm S∆°n', 'Tƒ©nh Gia'],
 	   		'Th·ª´a Thi√™n Hu·∫ø': ['Hu·∫ø', 'Th√†nh ph·ªë Hu·∫ø', 'H∆∞∆°ng Th·ªßy', 'H∆∞∆°ng Tr√†', 'Ph√∫ Vang'],
 	   		'Ti·ªÅn Giang': ['M·ªπ Tho', 'G√≤ C√¥ng', 'Cai L·∫≠y', 'Ch√¢u Th√†nh', 'T√¢n Ph∆∞·ªõc'],
	   	 	'Tr√† Vinh': ['Tr√† Vinh', 'Duy√™n H·∫£i', 'C·∫ßu K√®', 'C√†ng Long', 'Ti·ªÉu C·∫ßn'],
  	  		'Tuy√™n Quang': ['Tuy√™n Quang', 'Th√†nh ph·ªë Tuy√™n Quang', 'Y√™n S∆°n', 'H√†m Y√™n', 'Chi√™m H√≥a'],
 	   		'Vƒ©nh Long': ['Vƒ©nh Long', 'B√¨nh Minh', 'Long H·ªì', 'Mang Th√≠t', 'Tam B√¨nh'],
 	   		'Vƒ©nh Ph√∫c': ['Vƒ©nh Y√™n', 'Ph√∫c Y√™n', 'B√¨nh Xuy√™n', 'Vƒ©nh T∆∞·ªùng', 'Y√™n L·∫°c'],
	    	'Y√™n B√°i': ['Y√™n B√°i', 'Th√†nh ph·ªë Y√™n B√°i', 'L·ª•c Y√™n', 'VƒÉn Y√™n', 'Tr·∫•n Y√™n'],
	    	'H√† N·ªôi': ['Ba ƒê√¨nh', 'Ho√†n Ki·∫øm', 'ƒê·ªëng ƒêa', 'Hai B√† Tr∆∞ng', 'Ho√†ng Mai'],
	    	'H·ªì Ch√≠ Minh': ['Qu·∫≠n 1', 'Qu·∫≠n 2', 'Qu·∫≠n 3', 'Qu·∫≠n 4', 'Qu·∫≠n 5'],
        };
    const provinceCodes = {
    		'An Giang': '51',
    		'B√† R·ªãa - V≈©ng T√†u': '52',
    		'B·∫Øc K·∫°n': '11',
    		'B·∫Øc Ninh': '19',
    		'B·∫øn Tre': '55',
    		'B√¨nh ƒê·ªãnh': '37',
    		'B√¨nh D∆∞∆°ng': '74',
    		'B√¨nh Ph∆∞·ªõc': '27',
    		'C√† Mau': '61',
    		'Cao B·∫±ng': '06',
    		'C·∫ßn Th∆°': '92',
    		'ƒê√† N·∫µng': '04',
    		'ƒê·∫Øk L·∫Øk': '40',
    		'ƒê·∫Øk N√¥ng': '63',
    		'ƒêi·ªán Bi√™n': '62',
    		'ƒê·ªìng Nai': '48',
    		'ƒê·ªìng Th√°p': '50',
    		'Gia Lai': '38',
    		'H√† Giang': '05',
   	 		'H√† N·ªôi': '01',
    		'H√† Tƒ©nh': '30',
    		'H·∫≠u Giang': '64',
    		'H√≤a B√¨nh': '23',
    		'H∆∞ng Y√™n': '22',
    		'Kh√°nh H√≤a': '41',
    		'Ki√™n Giang': '54',
    		'Kon Tum': '36',
    		'Lai Ch√¢u': '07',
    		'L√¢m ƒê·ªìng': '42',
    		'L√†o Cai': '08',
    		'L·∫°ng S∆°n': '10',
    		'Long An': '49',
    		'Nam ƒê·ªãnh': '25',
    		'Ngh·ªá An': '29',
    		'Ninh B√¨nh': '27',
    		'Ninh Thu·∫≠n': '45',
    		'Ph√∫ Th·ªç': '15',
    		'Ph√∫ Y√™n': '39',
    		'Qu·∫£ng B√¨nh': '31',
    		'Qu·∫£ng Nam': '34',
    		'Qu·∫£ng Ng√£i': '35',
    		'Qu·∫£ng Ninh': '17',
    		'S√≥c TrƒÉng': '59',
    		'S∆°n La': '14',
    		'T√¢y Ninh': '46',
    		'Th√°i B√¨nh': '26',
    		'Th√°i Nguy√™n': '12',
    		'Tr√† Vinh': '58',
    		'Vƒ©nh Long': '57',
    		'Vƒ©nh Ph√∫c': '16',
    		'Y√™n B√°i': '13',
    		'H·ªì Ch√≠ Minh': '02',
    		'H·∫£i Ph√≤ng': '03',
    		'Thanh H√≥a' : '28',
			'B·∫Øc Giang' : '24',
			'B·∫°c Li√™u' : '95',
			'ƒêi·ªán Bi√™n' : '11',
			'H∆∞ng Y√™n' : '33',
			'Kh√°nh H√≤a' : '56',
			'Lai Ch√¢u' : '12',
			'L√†o Cai' : '10',
			'Long An' : '80',
			'Nam ƒê·ªãnh' : '36',
			'Ngh·ªá An' : '40',
			'Ninh B√¨nh' : '37',
			'Ninh Thu·∫≠n' : '58',
			'Ph√∫ Th·ªç' : '25',
			'Ph√∫ Y√™n' : '54',
			'Qu·∫£ng B√¨nh' : '44',
			'Qu·∫£ng Nam' : '49',
			'Qu·∫£ng Ng√£i' : '51',
			'Qu·∫£ng Ninh' : '22',
			'S√≥c TrƒÉng' : '94',
			'S∆°n La' : '14',
			'T√¢y Ninh' : '72',
			'Th√°i B√¨nh' : '34',
			'Th√°i Nguy√™n' : '19',
			'Tr√† Vinh' : '84',
			'Vƒ©nh Long' : '86',
			'Vƒ©nh Ph√∫c' : '26',
			'Y√™n B√°i' : '15'
    };
	
        const setupDynamicDistricts = (provinceSelect, districtSelect, provinceCodeInput) => {
            provinceSelect.addEventListener('change', function() {
                const selectedProvince = this.value;

                // C·∫≠p nh·∫≠t m√£ t·ªânh
                const code = provinceCodes[selectedProvince] || '';
                provinceCodeInput.value = code;

                // C·∫≠p nh·∫≠t danh s√°ch qu·∫≠n/huy·ªán
                districtSelect.innerHTML = '<option value="">Ch·ªçn huy·ªán</option>';
                if (districts[selectedProvince]) {
                    districts[selectedProvince].forEach(district => {
                        const option = document.createElement('option');
                        option.value = district;
                        option.textContent = district;
                        districtSelect.appendChild(option);
                    });
                }
            });
        };

        // Th√¥ng tin c√° nh√¢n
        const provinceSelect = document.getElementById('province');
        const districtSelect = document.getElementById('district');
        const provinceCodeInput = document.getElementById('provinceCode');
        setupDynamicDistricts(provinceSelect, districtSelect, provinceCodeInput);

        // L·ªõp 10
        const schoolProvinceSelect10 = document.getElementById('schoolProvince10');
        const schoolDistrictSelect10 = document.getElementById('schoolDistrict10');
        const schoolProvinceCodeInput10 = document.getElementById('schoolProvinceCode10');
        setupDynamicDistricts(schoolProvinceSelect10, schoolDistrictSelect10, schoolProvinceCodeInput10);

        // L·ªõp 11
        const schoolProvinceSelect11 = document.getElementById('schoolProvince11');
        const schoolDistrictSelect11 = document.getElementById('schoolDistrict11');
        const schoolProvinceCodeInput11 = document.getElementById('schoolProvinceCode11');
        setupDynamicDistricts(schoolProvinceSelect11, schoolDistrictSelect11, schoolProvinceCodeInput11);

	// L·ªõp 12
        const schoolProvinceSelect12 = document.getElementById('schoolProvince12');
        const schoolDistrictSelect12 = document.getElementById('schoolDistrict12');
        const schoolProvinceCodeInput12 = document.getElementById('schoolProvinceCode12');
        setupDynamicDistricts(schoolProvinceSelect12, schoolDistrictSelect12, schoolProvinceCodeInput12);


	// Ki·ªÉm tra ƒë·ªãnh d·∫°ng s·ªë ƒêT 
       const phoneInput = document.getElementById('phone');

        phoneInput.addEventListener('input', function() {
            if (this.validity.valueMissing) {
                this.setCustomValidity('Ph·∫£i ƒëi·ªÅn √¥ n√†y');
            } else if (this.validity.patternMismatch) {
                this.setCustomValidity('S·ªë ƒëi·ªán tho·∫°i ph·∫£i g·ªìm 10 ch·ªØ s·ªë.');
            } else {
                this.setCustomValidity('');
            }
        });
	// Ki·ªÉm tra ƒë·ªãnh d·∫°ng s·ªë CCCD
	 identityInput.addEventListener('input', function() {
            if (this.validity.valueMissing) {
                this.setCustomValidity('Ph·∫£i ƒëi·ªÅn √¥ n√†y');
            } else if (this.validity.patternMismatch) {
                this.setCustomValidity('S·ªë CCCD ph·∫£i g·ªìm 12 ch·ªØ s·ªë.');
            } else {
                this.setCustomValidity('');
            }
        });

